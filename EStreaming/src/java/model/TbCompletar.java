package model;
// Generated 21/10/2017 10:26:18 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TbCompletar generated by hbm2java
 */
@Entity
@Table(name="tb_completar"
    ,catalog="estreaming"
)
public class TbCompletar  implements java.io.Serializable {


     private Integer idtCompletar;
     private TbAssunto tbAssunto;
     private TbTipoQuestao tbTipoQuestao;
     private String txtEnunciado;
     private boolean stsCompletar;
     private int ordCompletar;
     private int qtdCampos;
     private String txtFrase;
     private Date dtaInsercao;
     private char flgFinalizada;
     private Set<TbCompletarAlternativas> tbCompletarAlternativases = new HashSet<TbCompletarAlternativas>(0);

    public TbCompletar() {
    }

	
    public TbCompletar(TbAssunto tbAssunto, TbTipoQuestao tbTipoQuestao, String txtEnunciado, boolean stsCompletar, int ordCompletar, int qtdCampos, String txtFrase, Date dtaInsercao, char flgFinalizada) {
        this.tbAssunto = tbAssunto;
        this.tbTipoQuestao = tbTipoQuestao;
        this.txtEnunciado = txtEnunciado;
        this.stsCompletar = stsCompletar;
        this.ordCompletar = ordCompletar;
        this.qtdCampos = qtdCampos;
        this.txtFrase = txtFrase;
        this.dtaInsercao = dtaInsercao;
        this.flgFinalizada = flgFinalizada;
    }
    public TbCompletar(TbAssunto tbAssunto, TbTipoQuestao tbTipoQuestao, String txtEnunciado, boolean stsCompletar, int ordCompletar, int qtdCampos, String txtFrase, Date dtaInsercao, char flgFinalizada, Set<TbCompletarAlternativas> tbCompletarAlternativases) {
       this.tbAssunto = tbAssunto;
       this.tbTipoQuestao = tbTipoQuestao;
       this.txtEnunciado = txtEnunciado;
       this.stsCompletar = stsCompletar;
       this.ordCompletar = ordCompletar;
       this.qtdCampos = qtdCampos;
       this.txtFrase = txtFrase;
       this.dtaInsercao = dtaInsercao;
       this.flgFinalizada = flgFinalizada;
       this.tbCompletarAlternativases = tbCompletarAlternativases;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idt_completar", unique=true, nullable=false)
    public Integer getIdtCompletar() {
        return this.idtCompletar;
    }
    
    public void setIdtCompletar(Integer idtCompletar) {
        this.idtCompletar = idtCompletar;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cod_assunto", nullable=false)
    public TbAssunto getTbAssunto() {
        return this.tbAssunto;
    }
    
    public void setTbAssunto(TbAssunto tbAssunto) {
        this.tbAssunto = tbAssunto;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cod_tipo_questao", nullable=false)
    public TbTipoQuestao getTbTipoQuestao() {
        return this.tbTipoQuestao;
    }
    
    public void setTbTipoQuestao(TbTipoQuestao tbTipoQuestao) {
        this.tbTipoQuestao = tbTipoQuestao;
    }

    
    @Column(name="txt_enunciado", nullable=false, length=65535)
    public String getTxtEnunciado() {
        return this.txtEnunciado;
    }
    
    public void setTxtEnunciado(String txtEnunciado) {
        this.txtEnunciado = txtEnunciado;
    }

    
    @Column(name="sts_completar", nullable=false)
    public boolean isStsCompletar() {
        return this.stsCompletar;
    }
    
    public void setStsCompletar(boolean stsCompletar) {
        this.stsCompletar = stsCompletar;
    }

    
    @Column(name="ord_completar", nullable=false)
    public int getOrdCompletar() {
        return this.ordCompletar;
    }
    
    public void setOrdCompletar(int ordCompletar) {
        this.ordCompletar = ordCompletar;
    }

    
    @Column(name="qtd_campos", nullable=false)
    public int getQtdCampos() {
        return this.qtdCampos;
    }
    
    public void setQtdCampos(int qtdCampos) {
        this.qtdCampos = qtdCampos;
    }

    
    @Column(name="txt_frase", nullable=false, length=65535)
    public String getTxtFrase() {
        return this.txtFrase;
    }
    
    public void setTxtFrase(String txtFrase) {
        this.txtFrase = txtFrase;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dta_insercao", nullable=false, length=19)
    public Date getDtaInsercao() {
        return this.dtaInsercao;
    }
    
    public void setDtaInsercao(Date dtaInsercao) {
        this.dtaInsercao = dtaInsercao;
    }

    
    @Column(name="flg_finalizada", nullable=false, length=1)
    public char getFlgFinalizada() {
        return this.flgFinalizada;
    }
    
    public void setFlgFinalizada(char flgFinalizada) {
        this.flgFinalizada = flgFinalizada;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbCompletar")
    public Set<TbCompletarAlternativas> getTbCompletarAlternativases() {
        return this.tbCompletarAlternativases;
    }
    
    public void setTbCompletarAlternativases(Set<TbCompletarAlternativas> tbCompletarAlternativases) {
        this.tbCompletarAlternativases = tbCompletarAlternativases;
    }




}


