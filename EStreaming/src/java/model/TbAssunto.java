package model;
// Generated 21/10/2017 10:26:18 by Hibernate Tools 4.3.1


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TbAssunto generated by hbm2java
 */
@Entity
@Table(name="tb_assunto"
    ,catalog="estreaming"
)
public class TbAssunto  implements java.io.Serializable {


     private int idtAssunto;
     private TbDisciplina tbDisciplina;
     private String txtTemaAssunto;
     private Date dtaInsercao;
     private boolean stsAssunto;
     private int codUsuarioCriador;
     private int qtdAtividades;
     private Set<TbCompletar> tbCompletars = new HashSet<TbCompletar>(0);
     private Set<TbNotas> tbNotases = new HashSet<TbNotas>(0);
     private Set<TbMultEscolha> tbMultEscolhas = new HashSet<TbMultEscolha>(0);
     private Set<TbVF> tbVFs = new HashSet<TbVF>(0);
     private Set<TbSomatorio> tbSomatorios = new HashSet<TbSomatorio>(0);
     private Set<TaAssuntoMidia> taAssuntoMidias = new HashSet<TaAssuntoMidia>(0);

    public TbAssunto() {
    }

	
    public TbAssunto(int idtAssunto, TbDisciplina tbDisciplina, String txtTemaAssunto, Date dtaInsercao, boolean stsAssunto, int codUsuarioCriador, int qtdAtividades) {
        this.idtAssunto = idtAssunto;
        this.tbDisciplina = tbDisciplina;
        this.txtTemaAssunto = txtTemaAssunto;
        this.dtaInsercao = dtaInsercao;
        this.stsAssunto = stsAssunto;
        this.codUsuarioCriador = codUsuarioCriador;
        this.qtdAtividades = qtdAtividades;
    }
    public TbAssunto(int idtAssunto, TbDisciplina tbDisciplina, String txtTemaAssunto, Date dtaInsercao, boolean stsAssunto, int codUsuarioCriador, int qtdAtividades, Set<TbCompletar> tbCompletars, Set<TbNotas> tbNotases, Set<TbMultEscolha> tbMultEscolhas, Set<TbVF> tbVFs, Set<TbSomatorio> tbSomatorios, Set<TaAssuntoMidia> taAssuntoMidias) {
       this.idtAssunto = idtAssunto;
       this.tbDisciplina = tbDisciplina;
       this.txtTemaAssunto = txtTemaAssunto;
       this.dtaInsercao = dtaInsercao;
       this.stsAssunto = stsAssunto;
       this.codUsuarioCriador = codUsuarioCriador;
       this.qtdAtividades = qtdAtividades;
       this.tbCompletars = tbCompletars;
       this.tbNotases = tbNotases;
       this.tbMultEscolhas = tbMultEscolhas;
       this.tbVFs = tbVFs;
       this.tbSomatorios = tbSomatorios;
       this.taAssuntoMidias = taAssuntoMidias;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idt_assunto", unique=true, nullable=false)
    public int getIdtAssunto() {
        return this.idtAssunto;
    }
    
    public void setIdtAssunto(int idtAssunto) {
        this.idtAssunto = idtAssunto;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cod_disciplina", nullable=false)
    public TbDisciplina getTbDisciplina() {
        return this.tbDisciplina;
    }
    
    public void setTbDisciplina(TbDisciplina tbDisciplina) {
        this.tbDisciplina = tbDisciplina;
    }

    
    @Column(name="txt_tema_assunto", nullable=false, length=65535)
    public String getTxtTemaAssunto() {
        return this.txtTemaAssunto;
    }
    
    public void setTxtTemaAssunto(String txtTemaAssunto) {
        this.txtTemaAssunto = txtTemaAssunto;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dta_insercao", nullable=false, length=19)
    public Date getDtaInsercao() {
        return this.dtaInsercao;
    }
    
    public void setDtaInsercao(Date dtaInsercao) {
        this.dtaInsercao = dtaInsercao;
    }

    
    @Column(name="sts_assunto", nullable=false)
    public boolean isStsAssunto() {
        return this.stsAssunto;
    }
    
    public void setStsAssunto(boolean stsAssunto) {
        this.stsAssunto = stsAssunto;
    }

    
    @Column(name="cod_usuario_criador", nullable=false)
    public int getCodUsuarioCriador() {
        return this.codUsuarioCriador;
    }
    
    public void setCodUsuarioCriador(int codUsuarioCriador) {
        this.codUsuarioCriador = codUsuarioCriador;
    }

    
    @Column(name="qtd_atividades", nullable=false)
    public int getQtdAtividades() {
        return this.qtdAtividades;
    }
    
    public void setQtdAtividades(int qtdAtividades) {
        this.qtdAtividades = qtdAtividades;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbAssunto")
    public Set<TbCompletar> getTbCompletars() {
        return this.tbCompletars;
    }
    
    public void setTbCompletars(Set<TbCompletar> tbCompletars) {
        this.tbCompletars = tbCompletars;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbAssunto")
    public Set<TbNotas> getTbNotases() {
        return this.tbNotases;
    }
    
    public void setTbNotases(Set<TbNotas> tbNotases) {
        this.tbNotases = tbNotases;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbAssunto")
    public Set<TbMultEscolha> getTbMultEscolhas() {
        return this.tbMultEscolhas;
    }
    
    public void setTbMultEscolhas(Set<TbMultEscolha> tbMultEscolhas) {
        this.tbMultEscolhas = tbMultEscolhas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbAssunto")
    public Set<TbVF> getTbVFs() {
        return this.tbVFs;
    }
    
    public void setTbVFs(Set<TbVF> tbVFs) {
        this.tbVFs = tbVFs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbAssunto")
    public Set<TbSomatorio> getTbSomatorios() {
        return this.tbSomatorios;
    }
    
    public void setTbSomatorios(Set<TbSomatorio> tbSomatorios) {
        this.tbSomatorios = tbSomatorios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tbAssunto")
    public Set<TaAssuntoMidia> getTaAssuntoMidias() {
        return this.taAssuntoMidias;
    }
    
    public void setTaAssuntoMidias(Set<TaAssuntoMidia> taAssuntoMidias) {
        this.taAssuntoMidias = taAssuntoMidias;
    }




}


